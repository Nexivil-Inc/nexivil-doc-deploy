(self.webpackChunknexivil_doc=self.webpackChunknexivil_doc||[]).push([[191],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return s}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)n=l[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),d=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=d(e.components);return i.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=d(n),s=r,c=m["".concat(o,".").concat(s)]||m[s]||k[s]||l;return n?i.createElement(c,a(a({ref:t},u),{},{components:n})):i.createElement(c,a({ref:t},u))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,a[1]=p;for(var d=2;d<l;d++)a[d]=n[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5272:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return p},toc:function(){return o},default:function(){return u}});var i=n(2122),r=n(9756),l=(n(7294),n(3905)),a={id:"2D",title:"2D"},p={unversionedId:"nexivil-package-modules/2D",id:"nexivil-package-modules/2D",isDocsHomePage:!1,title:"2D",description:"Class",source:"@site/docs/nexivil-package-modules/2. 2D.md",sourceDirName:"nexivil-package-modules",slug:"/nexivil-package-modules/2D",permalink:"/nexivil-doc-deploy/docs/nexivil-package-modules/2D",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/nexivil-package-modules/2. 2D.md",version:"current",sidebarPosition:2,frontMatter:{id:"2D",title:"2D"},sidebar:"tutorialSidebar",previous:{title:"Basic",permalink:"/nexivil-doc-deploy/docs/nexivil-package-modules/Basic"},next:{title:"3D",permalink:"/nexivil-doc-deploy/docs/nexivil-package-modules/3D"}},o=[{value:"Class",id:"class",children:[{value:"Draw",id:"draw",children:[]},{value:"Line",id:"line",children:[]},{value:"Circle",id:"circle",children:[]},{value:"Arc",id:"arc",children:[]},{value:"Text",id:"text",children:[]},{value:"Hatch",id:"hatch",children:[]},{value:"Leader",id:"leader",children:[]},{value:"Dimension",id:"dimension",children:[]},{value:"DimAng",id:"dimang",children:[]}]},{value:"Module",id:"module",children:[{value:"ToArcLine",id:"toarcline",children:[]},{value:"PointToRebar",id:"pointtorebar",children:[]},{value:"ToSectionMarker",id:"tosectionmarker",children:[]},{value:"Trim2D",id:"trim2d",children:[]},{value:"Plot2D",id:"plot2d",children:[]},{value:"Layout2D",id:"layout2d",children:[]}]}],d={toc:o};function u(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,l.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"class"},"Class"),(0,l.kt)("h3",{id:"draw"},"Draw"),(0,l.kt)("p",null,"Create a basic class for drawing(2D)"),(0,l.kt)("h4",{id:"constructor"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Draw(type, points, layer, meta)\n")),(0,l.kt)("p",null,"\u2003"," type ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Name of tpye for the AutoCad"),(0,l.kt)("p",null,"\u2003"," vertices ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Element is a coordinate with x and y (points of input) ","[mm]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Material name of the mesh line"),(0,l.kt)("p",null,"\u2003"," meta ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : Meta information ( {part, key, name} )"),(0,l.kt)("p",null,"\u2003"," ","\u2003"," name ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Top-level title (default = "default")'),(0,l.kt)("p",null,"\u2003"," ","\u2003"," part ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Mid-level title (default = "default")'),(0,l.kt)("p",null,"\u2003"," ","\u2003"," key ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Bottom-level title (default = "default")'),(0,l.kt)("h4",{id:"properties"},"Properties"),(0,l.kt)("p",null,"Containing the data of constructor input."),(0,l.kt)("h3",{id:"line"},"Line"),(0,l.kt)("p",null,"Create a new line or polyline class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-1"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Line(points, layer, isClosed = false, widht = undefined)\n")),(0,l.kt)("p",null,"\u2003"," points ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Element is a coordinate with x and y ","[mm]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Material name of the mesh line"),(0,l.kt)("p",null,"\u2003"," isClosed ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," : Whether to connect the start and end points (default = false)"),(0,l.kt)("p",null,"\u2003"," width ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : line width with 0 to 1 ","[m]"," (default = 0.004)"),(0,l.kt)("h4",{id:"properties-1"},"Properties"),(0,l.kt)("p",null,"See the base ",(0,l.kt)("inlineCode",{parentName:"p"},"Draw")," class for inherited properties."),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "POLYLINE" if the length of points is more than 2, "LINE" otherwise'),(0,l.kt)("p",null,"\u2003"," .shape ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," : isClosed of input"),(0,l.kt)("p",null,"\u2003"," .width ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : width of input (default = 0.004) ","[m]"),(0,l.kt)("h3",{id:"circle"},"Circle"),(0,l.kt)("p",null,"Create a new circle class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-2"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Circle(point, radius, layer, sumSeg = 16)\n")),(0,l.kt)("p",null,"\u2003"," point ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A center coordinate with x and y ","[mm]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Material name of the mesh line"),(0,l.kt)("p",null,"\u2003"," radius ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Radius of circle ","[mm]"),(0,l.kt)("p",null,"\u2003"," numSeg ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : Number of circle points ","[EA]"),(0,l.kt)("h4",{id:"properties-2"},"Properties"),(0,l.kt)("p",null,"See the base ",(0,l.kt)("inlineCode",{parentName:"p"},"Draw")," class for inherited properties."),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "CIRCLE"'),(0,l.kt)("p",null,"\u2003"," .center ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : point of input"),(0,l.kt)("p",null,"\u2003"," .radius ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : radius of input"),(0,l.kt)("p",null,"\u2003"," .numSeg ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : numSeg of input"),(0,l.kt)("h3",{id:"arc"},"Arc"),(0,l.kt)("p",null,"Create a new arc class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-3"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Arc(point, radius, startAngle, endAngle, layer, numSeg = 16, isClockwise = false)\n")),(0,l.kt)("p",null,"\u2003"," point ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A center coordinate with x and y ","[mm]"),(0,l.kt)("p",null,"\u2003"," radius ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Radius of circle for arc ","[mm]"),(0,l.kt)("p",null,"\u2003"," startAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Start counterclockwise angle relative to the x-axis ","[rad]"),(0,l.kt)("p",null,"\u2003"," endAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : End counterclockwise angle relative to the x-axis ","[rad]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Material name of the mesh line"),(0,l.kt)("p",null,"\u2003"," numSeg ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : Number of circle points (default = 16) ","[EA]"),(0,l.kt)("p",null,"\u2003"," isClockwise ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," : Whether the drawn arc line is clockwise (default = false)"),(0,l.kt)("h4",{id:"properties-3"},"Properties"),(0,l.kt)("p",null,"See the base ",(0,l.kt)("inlineCode",{parentName:"p"},"Draw")," class for inherited properties."),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "ARC"'),(0,l.kt)("p",null,"\u2003"," .center ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : point of input"),(0,l.kt)("p",null,"\u2003"," .radius ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")),(0,l.kt)("p",null,"\u2003"," .startAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")),(0,l.kt)("p",null,"\u2003"," .endAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")),(0,l.kt)("p",null,"\u2003"," .numSeg ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")),(0,l.kt)("p",null,"\u2003"," .isClockwise ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")),(0,l.kt)("h3",{id:"text"},"Text"),(0,l.kt)("p",null,"Create a new text class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-4"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Text(anchor, text, fontSize, rotate, align, layer)\n")),(0,l.kt)("p",null,"\u2003"," angchor ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A text location coordinate with x and y ","[mm]"),(0,l.kt)("p",null,"\u2003"," text ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : String to write on graphic"),(0,l.kt)("p",null,"\u2003"," fontSize ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Font size ","[mm]"),(0,l.kt)("p",null,"\u2003"," rotate ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : The rotation angle of string ","[rad]"),(0,l.kt)("p",null,"\u2003"," align ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : String position relative to the anchor (center, left, right)"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Material name of the mesh line"),(0,l.kt)("h4",{id:"properties-4"},"Properties"),(0,l.kt)("p",null,"See the base ",(0,l.kt)("inlineCode",{parentName:"p"},"Draw")," class for inherited properties."),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "TEXT"'),(0,l.kt)("p",null,"\u2003"," .text ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .textPoint ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : anchor of input"),(0,l.kt)("p",null,"\u2003"," .textRotate ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : rotate of input"),(0,l.kt)("p",null,"\u2003"," .align ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .textHeight ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : fontSize of input"),(0,l.kt)("p",null,"\u2003"," .style ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "DX_STANDARD"'),(0,l.kt)("p",null,"\u2003"," .halign ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : 0(align = left), 1(align = center), 2(align = right)"),(0,l.kt)("p",null,"\u2003"," .valign ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : 2"),(0,l.kt)("h3",{id:"hatch"},"Hatch"),(0,l.kt)("p",null,"Create a new hatch class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-5"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Hatch(poins, layer)\n")),(0,l.kt)("p",null,"\u2003"," points ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Array with points of a shape ","[mm]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Material name of the mesh line"),(0,l.kt)("h4",{id:"properties-5"},"Properties"),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "HATCH"'),(0,l.kt)("p",null,"\u2003"," .vertices ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : points of input"),(0,l.kt)("p",null,"\u2003"," .layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .shape ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," : always true"),(0,l.kt)("h3",{id:"leader"},"Leader"),(0,l.kt)("p",null,"Create a new leader class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-6"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Leader(points, text1, text2, fontSize, align, layer = "DIM")\n')),(0,l.kt)("p",null,"\u2003"," points ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Array with points of a leader line ","[mm]"),(0,l.kt)("p",null,"\u2003"," text1 ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : A string located at the top of the leader line"),(0,l.kt)("p",null,"\u2003"," text2 ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : A string located at the bottom of the leader line"),(0,l.kt)("p",null,"\u2003"," fontSize ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Font size ","[mm]"),(0,l.kt)("p",null,"\u2003"," align ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : String position relative to the anchor (center, left, right)"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Material name of the mesh line (default = "DIM")'),(0,l.kt)("h4",{id:"properties-6"},"Properties"),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "LEADER"'),(0,l.kt)("p",null,"\u2003"," .vertices ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : points of input"),(0,l.kt)("p",null,"\u2003"," .layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .text1 ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .text2 ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .anchor1 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : the coordinate of text1 location"),(0,l.kt)("p",null,"\u2003"," .anchor2 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : the coordinate of text2 location"),(0,l.kt)("p",null,"\u2003"," .align ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .textHeight ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : fontSize of input"),(0,l.kt)("p",null,"\u2003"," .halign ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : 0(align = left), 1(align = center), 2(align = right)"),(0,l.kt)("p",null,"\u2003"," .valign ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : 2"),(0,l.kt)("h3",{id:"dimension"},"Dimension"),(0,l.kt)("p",null,"Create a new dimension class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-7"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Dimension(point1, point2, fontSize, layer = "DIM")\n')),(0,l.kt)("p",null,"\u2003"," point1 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A start point of the line to draw dimension ","[mm]"),(0,l.kt)("p",null,"\u2003"," point2 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A end point of the line to draw dimension ","[mm]"),(0,l.kt)("p",null,"\u2003"," fontSize ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Font size ","[mm]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Material name of the mesh line (default = "DIM")'),(0,l.kt)("h4",{id:"properties-7"},"Properties"),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "LEADER"'),(0,l.kt)("p",null,"\u2003"," .vertices ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Array with point1 and point2"),(0,l.kt)("p",null,"\u2003"," .layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .textLayer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "CZ-TEX0"'),(0,l.kt)("p",null,"\u2003"," .point1 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point separted from input point1 by 3.625 times font size in the normal direction"),(0,l.kt)("p",null,"\u2003"," .point2 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point separted from input point2 by 3.625 times font size in the normal direction"),(0,l.kt)("p",null,"\u2003"," .point1Base ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point separted from input point1 by 0.625 times font size in the normal direction"),(0,l.kt)("p",null,"\u2003"," .point2Base ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point separted from input point2 by 0.625 times font size in the normal direction"),(0,l.kt)("p",null,"\u2003"," .point1Offset ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point extended from point1Base by font size/3 time in the normal direction"),(0,l.kt)("p",null,"\u2003"," .point2Offset ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point extended from point2Base by font size/3 time in the normal direction"),(0,l.kt)("p",null,"\u2003"," .point1Extend ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point extended from point1 by font size/3 time in the normal direction"),(0,l.kt)("p",null,"\u2003"," .point2Extend ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A point extended from point2 by font size/3 time in the normal direction"),(0,l.kt)("p",null,"\u2003"," .textPoint ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A coordinate with text position"),(0,l.kt)("p",null,"\u2003"," .textHeight ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : fontSize of input"),(0,l.kt)("p",null,"\u2003"," .textRotate ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : rotate of input"),(0,l.kt)("p",null,"\u2003"," .text ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .dimType ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : 1"),(0,l.kt)("p",null,"\u2003"," .style ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "STANDARD"'),(0,l.kt)("p",null,"\u2003"," .this.scale ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : 1"),(0,l.kt)("h3",{id:"dimang"},"DimAng"),(0,l.kt)("p",null,"Create a new dimension angle class for drawing(2D)."),(0,l.kt)("h4",{id:"constructor-8"},"Constructor"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'DimAng(line1, line2, fontSize, layer = "DIM", isTop = true, isClockwise = false, offsetIndex = 1, text = null)\n')),(0,l.kt)("p",null,"\u2003"," line1 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A start line to draw angle ","[mm]"),(0,l.kt)("p",null,"\u2003"," line2 ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A start line to draw angle ","[mm]"),(0,l.kt)("p",null,"\u2003"," fontSize ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Font size ","[mm]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Material name of the mesh line (default = "DIM")'),(0,l.kt)("p",null,"\u2003"," isTop ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," : whether text position is top (default = true)"),(0,l.kt)("p",null,"\u2003"," isClockwise ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," : Whether the drawn arc line is clockwise (default = false)"),(0,l.kt)("p",null,"\u2003"," offsetIndex ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : A multiple that determines the length of the offset (default = 1)"),(0,l.kt)("p",null,"\u2003"," text ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : If this is null, text is angle degree fo arc (default = null)"),(0,l.kt)("h4",{id:"properties-8"},"Properties"),(0,l.kt)("p",null,"\u2003"," .type ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "LEADER"'),(0,l.kt)("p",null,"\u2003"," .vertices ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Array with point1 and point2"),(0,l.kt)("p",null,"\u2003"," .layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .textLayer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "CZ-TEX0"'),(0,l.kt)("p",null,"\u2003"," .style ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : "DX_STANDARD"'),(0,l.kt)("p",null,"\u2003"," .this.scale ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : 1"),(0,l.kt)("p",null,"\u2003"," .dimType ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : 34"),(0,l.kt)("p",null,"\u2003"," .text ",(0,l.kt)("inlineCode",{parentName:"p"},"String")),(0,l.kt)("p",null,"\u2003"," .arcPoints ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : The array with points in arc"),(0,l.kt)("p",null,"\u2003"," .center ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A Intersection point between line1 and line2"),(0,l.kt)("p",null,"\u2003"," .radius ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : radius of input ","[mm]"),(0,l.kt)("p",null,"\u2003"," .startAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Start counterclockwise angle relative to the x-axis ","[rad]"),(0,l.kt)("p",null,"\u2003"," .endAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : End counterclockwise angle relative to the x-axis ","[rad]"),(0,l.kt)("p",null,"\u2003"," .textPoint ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")," : A coordinate with text position"),(0,l.kt)("p",null,"\u2003"," .textHeight ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : fontSize of input"),(0,l.kt)("p",null,"\u2003"," .textRotate ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : rotate of input"),(0,l.kt)("h2",{id:"module"},"Module"),(0,l.kt)("h3",{id:"toarcline"},"ToArcLine"),(0,l.kt)("p",null,"Define new Line class with points on arc."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'ToArcLine(center, radius, startAngle, endAngle, layer = "0", isClockwise = false)\n')),(0,l.kt)("h4",{id:"inputs"},"Inputs"),(0,l.kt)("p",null,"\u2003"," center ",(0,l.kt)("inlineCode",{parentName:"p"},"Point")," : center point of arc"),(0,l.kt)("p",null,"\u2003"," radius ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : radius of arc ","[mm]"),(0,l.kt)("p",null,"\u2003"," startAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Start counterclockwise angle relative to the x-axis ","[rad]"),(0,l.kt)("p",null,"\u2003"," endAngle ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : End counterclockwise angle relative to the x-axis ","[rad]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Material name of the mesh line (default = "0")'),(0,l.kt)("p",null,"\u2003"," isClockwise ",(0,l.kt)("inlineCode",{parentName:"p"},"Boolean")," : Whether the drawn arc line is clockwise (default = false)"),(0,l.kt)("h4",{id:"output"},"Output"),(0,l.kt)("p",null,"\u2003"," ",(0,l.kt)("inlineCode",{parentName:"p"},"Line")),(0,l.kt)("h3",{id:"pointtorebar"},"PointToRebar"),(0,l.kt)("p",null,"Define circle points with center equal to input point."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'PointToRebar(point, dia, layer = "0", numSeg = 12)\n')),(0,l.kt)("h4",{id:"input"},"Input"),(0,l.kt)("p",null,"\u2003"," point ",(0,l.kt)("inlineCode",{parentName:"p"},"Point")," : center position of rebar"),(0,l.kt)("p",null,"\u2003"," dia ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : diameter of rebar"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Material name of the mesh line (default = "0")'),(0,l.kt)("p",null,"\u2003"," numSeg ",(0,l.kt)("inlineCode",{parentName:"p"},"Integer")," : Number of circle points ","[EA]"," (default = 12)"),(0,l.kt)("h4",{id:"output-1"},"Output"),(0,l.kt)("p",null,"\u2003"," ",(0,l.kt)("inlineCode",{parentName:"p"},"Line")),(0,l.kt)("h3",{id:"tosectionmarker"},"ToSectionMarker"),(0,l.kt)("p",null,"Define object to draw section marker on two points. The arrow direction is equal to the direction in which the vector of two points is rotated 90 degrees clockwise."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'ToSectionMarker(points, text, fontSize, layer = "DIM")\n')),(0,l.kt)("h4",{id:"input-1"},"Input"),(0,l.kt)("p",null,"\u2003"," points ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Two points to draw marker"),(0,l.kt)("p",null,"\u2003"," text ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : String for marker"),(0,l.kt)("p",null,"\u2003"," fontSize ",(0,l.kt)("inlineCode",{parentName:"p"},"Number")," : Font size ","[mm]"),(0,l.kt)("p",null,"\u2003"," layer ",(0,l.kt)("inlineCode",{parentName:"p"},"String"),' : Material name of the mesh line (default = "DIM")'),(0,l.kt)("h4",{id:"output-2"},"Output"),(0,l.kt)("p",null,"\u2003"," ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")),(0,l.kt)("h3",{id:"trim2d"},"Trim2D"),(0,l.kt)("p",null,"Define the arrary with objects sliced by the boundary lines on XY plane."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Trim2D(drawList, boundary, newLayer)\n")),(0,l.kt)("h4",{id:"input-2"},"Input"),(0,l.kt)("p",null,"\u2003"," drawList ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Objects with vertices as a property"),(0,l.kt)("p",null,"\u2003"," boundary ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," : Array with points (he line connecting the points is assumed to be closed.)"),(0,l.kt)("p",null,"\u2003"," newLayer ",(0,l.kt)("inlineCode",{parentName:"p"},"String")," : Material name of the mesh line"),(0,l.kt)("h4",{id:"output-3"},"Output"),(0,l.kt)("p",null,"\u2003"," ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")),(0,l.kt)("h3",{id:"plot2d"},"Plot2D"),(0,l.kt)("p",null,"Define the arrary with objects to draw layout the lines and titles for drawing"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Plot2D(layout, plotProps)\n")),(0,l.kt)("h4",{id:"input-3"},"Input"),(0,l.kt)("p",null,"\u2003"," layout ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")),(0,l.kt)("p",null,"\u2003"," plotProps ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"Object")),(0,l.kt)("h4",{id:"output-4"},"Output"),(0,l.kt)("p",null,"\u2003"," ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")),(0,l.kt)("h3",{id:"layout2d"},"Layout2D"),(0,l.kt)("p",null,"..."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'Layout2D(drawList, dimList, tagList, xOffset, yOffset, scale, valueScale, title, subTitle = "", titleOffset = 20, rot = 0, scaleOn = true)\n')),(0,l.kt)("h4",{id:"input-4"},"Input"),(0,l.kt)("p",null,"..."),(0,l.kt)("h4",{id:"output-5"},"Output"),(0,l.kt)("p",null,"..."))}u.isMDXComponent=!0}}]);
(self.webpackChunknexivil_doc=self.webpackChunknexivil_doc||[]).push([[593],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=i,f=d["".concat(p,".").concat(m)]||d[m]||s[m]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2423:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var r=n(2122),i=n(9756),o=(n(7294),n(3905)),a={id:"1.Test",title:"1.Test"},l={unversionedId:"Test/1.Test",id:"Test/1.Test",isDocsHomePage:!1,title:"1.Test",description:"Start",source:"@site/docs\\Test\\1.\uc120\ud615\uc815\ubcf4.md",sourceDirName:"Test",slug:"/Test/1.Test",permalink:"/nexivil-doc-deploy/docs/Test/1.Test",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Test\\1.\uc120\ud615\uc815\ubcf4.md",version:"current",sidebarPosition:1,frontMatter:{id:"1.Test",title:"1.Test"},sidebar:"tutorialSidebar",previous:{title:"5.\uad6c\uc870\ud574\uc11d",permalink:"/nexivil-doc-deploy/docs/APLUSGirderManual/5.\uad6c\uc870\ud574\uc11d"}},p=[{value:"Start",id:"start",children:[]},{value:"TextEncoder",id:"textencoder",children:[{value:"Supported encodings",id:"supported-encodings",children:[]},{value:"INPUTS",id:"inputs",children:[]},{value:"OUTPUTS",id:"outputs",children:[]},{value:"Properties",id:"properties",children:[]}]}],c={toc:p};function u(e){var t=e.components,n=(0,i.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"start"},"Start"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n    "key": <string>\n}\n')),(0,o.kt)("h2",{id:"textencoder"},"TextEncoder"),(0,o.kt)("p",null,"Encoding conversion node (using ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ashtuchkin/iconv-lite"},"iconv-lite"),")"),(0,o.kt)("h3",{id:"supported-encodings"},"Supported encodings"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"All node.js native encodings: utf8, ucs2 / utf16-le, ascii, binary, base64, hex.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Additional unicode encodings: utf16, utf16-be, utf-7, utf-7-imap, utf32, utf32-le, and utf32-be.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"All widespread singlebyte encodings: Windows 125x family, ISO-8859 family,"),(0,o.kt)("p",{parentName:"li"},"IBM/DOS codepages, Macintosh family, KOI8 family, all others supported by iconv library."),(0,o.kt)("p",{parentName:"li"},"Aliases like 'latin1', 'us-ascii' also supported.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"All widespread multibyte encodings: CP932, CP936, CP949, CP950, GB2312, GBK, GB18030, Big5, Shift_JIS, EUC-JP."))),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ashtuchkin/iconv-lite/wiki/Supported-Encodings"},"all supported encodings on wiki"),"."),(0,o.kt)("p",null,"Most singlebyte encodings are generated automatically from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/bnoordhuis/node-iconv"},"node-iconv"),". Thank you Ben Noordhuis and libiconv authors!"),(0,o.kt)("p",null,"Multibyte encodings are generated from ",(0,o.kt)("a",{parentName:"p",href:"http://www.unicode.org/Public/MAPPINGS/"},"Unicode.org mappings")," and ",(0,o.kt)("a",{parentName:"p",href:"http://encoding.spec.whatwg.org/"},"WHATWG Encoding Standard mappings"),". Thank you, respective authors!"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-litegraph"},'\n{\n\n  "title": "TextEncoder",\n\n  "inputs": [{"name":"text"},{"name":"encode"}  ],\n\n  "outputs":[{"name":"file"}  ]\n\n}\n\n')),(0,o.kt)("h3",{id:"inputs"},"INPUTS"),(0,o.kt)("h4",{id:"text-"},"text ",(0,o.kt)("inlineCode",{parentName:"h4"},"*")),(0,o.kt)("p",null,"any type of text that you want to convert"),(0,o.kt)("h4",{id:"encode-string"},"encode ",(0,o.kt)("inlineCode",{parentName:"h4"},"string")),(0,o.kt)("p",null,"convert type"),(0,o.kt)("h3",{id:"outputs"},"OUTPUTS"),(0,o.kt)("h4",{id:"file-uint8array"},"file ",(0,o.kt)("inlineCode",{parentName:"h4"},"Uint8Array")),(0,o.kt)("p",null,"converted text"),(0,o.kt)("h3",{id:"properties"},"Properties"),(0,o.kt)("h4",{id:"encoder-string"},"encoder ",(0,o.kt)("inlineCode",{parentName:"h4"},"string")),(0,o.kt)("p",null,"same as input-encode"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"documentation generated on Thu, 20 Jan 2022 05:48:58 GMT")))}u.isMDXComponent=!0}}]);